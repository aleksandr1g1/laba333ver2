version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: healthtracker_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client/build:/var/www/healthtracker/client/build:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - server
      - client
    restart: unless-stopped
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: healthtracker_server
    ports:
      - "3002:3002"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3002
      - ENABLE_KAFKA=true
    depends_on:
      - kafka
    restart: unless-stopped
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: healthtracker_client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REACT_APP_API_URL=http://localhost/api
    restart: unless-stopped
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: healthtracker_kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: healthtracker_zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  kafka_data:
  zookeeper_data: 