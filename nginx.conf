user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    client_max_body_size 10M;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Сервер для API (бэкенд) на порту 3002
    upstream api_server {
        server localhost:3002;
    }

    # Сервер для React приложения (фронтенд) на порту 3000
    upstream client_server {
        server localhost:3000;
    }

    # Основной сервер, слушающий порт 80
    server {
        listen 80;
        server_name healthtracker.local; # Замените на ваш домен или используйте localhost
        
        # Логи для конкретного хоста
        access_log /var/log/nginx/healthtracker.access.log main;
        error_log /var/log/nginx/healthtracker.error.log;

        # Обслуживание статических файлов
        location /static/ {
            alias /var/www/healthtracker/client/build/static/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # API маршруты
        location /api/ {
            proxy_pass http://api_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Метрики и состояние здоровья
        location /metrics {
            proxy_pass http://api_server/api/metrics;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Ограничение доступа (только локальная сеть)
            # allow 127.0.0.1;
            # allow 192.168.0.0/16;
            # deny all;
        }

        location /health {
            proxy_pass http://api_server/api/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Все остальные запросы на клиентское приложение
        location / {
            proxy_pass http://client_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Для SPA (одностраничных приложений)
            try_files $uri $uri/ /index.html;
        }

        # Обработка ошибок
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
} 